{"remainingRequest":"/srv/app/node_modules/babel-loader/lib/index.js!/srv/app/node_modules/vue-loader-v16/dist/templateLoader.js??ref--6!/srv/app/node_modules/cache-loader/dist/cjs.js??ref--0-0!/srv/app/node_modules/vue-loader-v16/dist/index.js??ref--0-1!/srv/app/src/components/widgets/FearAndGreed.vue?vue&type=template&id=61b02742&scoped=true","dependencies":[{"path":"/srv/app/src/components/widgets/FearAndGreed.vue","mtime":1623970670400},{"path":"/srv/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/app/node_modules/babel-loader/lib/index.js","mtime":315532800000},{"path":"/srv/app/node_modules/vue-loader-v16/dist/templateLoader.js","mtime":1616796459000},{"path":"/srv/app/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/srv/app/node_modules/vue-loader-v16/dist/index.js","mtime":1616796459000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuY29uY2F0LmpzIjsKaW1wb3J0IHsgb3BlbkJsb2NrIGFzIF9vcGVuQmxvY2ssIGNyZWF0ZUJsb2NrIGFzIF9jcmVhdGVCbG9jaywgY3JlYXRlQ29tbWVudFZOb2RlIGFzIF9jcmVhdGVDb21tZW50Vk5vZGUsIHRvRGlzcGxheVN0cmluZyBhcyBfdG9EaXNwbGF5U3RyaW5nLCBjcmVhdGVWTm9kZSBhcyBfY3JlYXRlVk5vZGUsIHdpdGhTY29wZUlkIGFzIF93aXRoU2NvcGVJZCwgcHVzaFNjb3BlSWQgYXMgX3B1c2hTY29wZUlkLCBwb3BTY29wZUlkIGFzIF9wb3BTY29wZUlkIH0gZnJvbSAidnVlIjsKCnZhciBfd2l0aElkID0gLyojX19QVVJFX18qL193aXRoU2NvcGVJZCgiZGF0YS12LTYxYjAyNzQyIik7CgpfcHVzaFNjb3BlSWQoImRhdGEtdi02MWIwMjc0MiIpOwoKdmFyIF9ob2lzdGVkXzEgPSB7CiAgY2xhc3M6ICJHZl9Db250ZW50Igp9Owp2YXIgX2hvaXN0ZWRfMiA9IHsKICBrZXk6IDAKfTsKdmFyIF9ob2lzdGVkXzMgPSB7CiAga2V5OiAxCn07CnZhciBfaG9pc3RlZF80ID0gewogIGNsYXNzOiAiR2ZfdGl0bGUiCn07CnZhciBfaG9pc3RlZF81ID0gewogIGNsYXNzOiAiR2ZfdmFsdWUiCn07CnZhciBfaG9pc3RlZF82ID0gewogIGNsYXNzOiAiR2ZfYmFyIgp9OwoKdmFyIF9ob2lzdGVkXzcgPSAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgY2xhc3M6ICJHZl9sYWJlbHMiCn0sIFsvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCBudWxsLCAiRmVhciIpLCAvKiNfX1BVUkVfXyovX2NyZWF0ZVZOb2RlKCJkaXYiLCBudWxsLCAiR3JlZWQiKV0sIC0xCi8qIEhPSVNURUQgKi8KKTsKCl9wb3BTY29wZUlkKCk7CgpleHBvcnQgdmFyIHJlbmRlciA9IC8qI19fUFVSRV9fKi9fd2l0aElkKGZ1bmN0aW9uIChfY3R4LCBfY2FjaGUsICRwcm9wcywgJHNldHVwLCAkZGF0YSwgJG9wdGlvbnMpIHsKICByZXR1cm4gX29wZW5CbG9jaygpLCBfY3JlYXRlQmxvY2soInNlY3Rpb24iLCBfaG9pc3RlZF8xLCBbJGRhdGEubG9hZGluZyA/IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMiwgIiBsb2FkaW5nLi4uICIpKSA6IChfb3BlbkJsb2NrKCksIF9jcmVhdGVCbG9jaygiZGl2IiwgX2hvaXN0ZWRfMywgW19jcmVhdGVWTm9kZSgiaDIiLCBfaG9pc3RlZF80LCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnN0YXR1cyksIDEKICAvKiBURVhUICovCiAgKV0pKSwgX2NyZWF0ZVZOb2RlKCJkaXYiLCBfaG9pc3RlZF81LCBbX2NyZWF0ZVZOb2RlKCJkaXYiLCB7CiAgICBjbGFzczogIkdmX3ZhbHVlQnViYmxlIiwKICAgIHN0eWxlOiAiYmFja2dyb3VuZC1jb2xvcjogIi5jb25jYXQoJG9wdGlvbnMudmFsdWVDb2xvciwgIjsgbWFyZ2luLWxlZnQ6ICIpLmNvbmNhdCgkZGF0YS52YWx1ZSwgIiU7IikKICB9LCBfdG9EaXNwbGF5U3RyaW5nKCRkYXRhLnZhbHVlKSwgNQogIC8qIFRFWFQsIFNUWUxFICovCiAgKV0pLCBfY3JlYXRlVk5vZGUoImRpdiIsIF9ob2lzdGVkXzYsIFtfY3JlYXRlVk5vZGUoImRpdiIsIHsKICAgIGNsYXNzOiAiR2ZfYmFyTGluZSIsCiAgICBzdHlsZTogImJhY2tncm91bmQtY29sb3I6ICIuY29uY2F0KCRvcHRpb25zLnZhbHVlQ29sb3IsICI7IHdpZHRoOiAiKS5jb25jYXQoJGRhdGEudmFsdWUsICIlOyIpCiAgfSwgbnVsbCwgNAogIC8qIFNUWUxFICovCiAgKV0pLCBfaG9pc3RlZF83XSk7Cn0pOw=="},{"version":3,"sources":["/srv/app/src/components/widgets/FearAndGreed.vue"],"names":[],"mappings":";;;;;;;;AACS,EAAA,KAAK,EAAC;;;;;;;;;AAKR,EAAA,KAAK,EAAC;;;AAGN,EAAA,KAAK,EAAC;;;AASN,EAAA,KAAK,EAAC;;;8BAMX,YAAA,CAGM,KAHN,EAGM;AAHD,EAAA,KAAK,EAAC;AAGL,CAHN,EAAsB,C,aACpB,YAAA,CAAe,KAAf,EAAe,IAAf,EAAK,MAAL,CADoB,E,aAEpB,YAAA,CAAgB,KAAhB,EAAgB,IAAhB,EAAK,OAAL,CAFoB,CAAtB,E;;AAAA,C;;;;;uBAvBF,YAAA,CA2BY,SA3BZ,EAAA,UAAA,EA2BY,CA1BC,KAAA,CAAA,O,kBAAX,YAAA,CAEM,KAFN,EAEM,UAFN,EAAoB,cAApB,C,mBAGA,YAAA,CAEM,KAFN,EAEM,UAFN,EAEM,CADL,YAAA,CAAsC,IAAtC,EAAA,UAAA,EAAsC,gBAAA,CAAd,KAAA,CAAA,MAAc,CAAtC,EAA8B;AAAA;AAA9B,GACK,CAFN,C,CAuBU,EAnBV,YAAA,CAOM,KAPN,EAAA,UAAA,EAOM,CANJ,YAAA,CAKO,KALP,EAKO;AAJL,IAAA,KAAK,EAAC,gBAID;AAHJ,IAAA,KAAK,8BAAuB,QAAA,CAAA,UAAvB,4BAAmD,KAAA,CAAA,KAAnD;AAGD,GALP,E,iBAIM,KAAA,CAAA,K,CAJN,EAIW;AAAA;AAJX,GAMI,CAPN,CAmBU,EAVV,YAAA,CAKM,KALN,EAAA,UAAA,EAKM,CAJJ,YAAA,CAGS,KAHT,EAGS;AAFP,IAAA,KAAK,EAAC,YAEC;AADN,IAAA,KAAK,8BAAuB,QAAA,CAAA,UAAvB,sBAA6C,KAAA,CAAA,KAA7C;AACC,GAHT,E,IAAA,E;;AAAA,GAII,CALN,CAUU,EAJV,UAIU,CA3BZ,C","sourcesContent":["<template>\n<section class=\"Gf_Content\">\n  <div v-if=\"loading\">\n    loading...\n  </div>\n  <div v-else>\n   <h2 class=\"Gf_title\">{{ status }}</h2>\n  </div>\n\n  <div class=\"Gf_value\">\n    <div\n      class=\"Gf_valueBubble\"\n      :style=\"`background-color: ${valueColor}; margin-left: ${value}%;`\"\n     >\n       {{ value }}\n     </div>\n  </div>\n\n  <div class=\"Gf_bar\">\n    <div\n      class=\"Gf_barLine\"\n      :style=\"`background-color: ${valueColor}; width: ${value}%;`\"\n      ></div>\n  </div>\n  <div class=\"Gf_labels\">\n    <div>Fear</div>\n    <div>Greed</div>\n  </div>\n  </section>\n</template>\n\n<script>\n\nconst URL = 'https://api.alternative.me/fng/';\n\nimport axios from 'axios';\n\nexport default {\n  name: 'Fear and Greed',\n  data() {\n    return {\n      colorFear:  [115, 159, 251],\n      colorGreed: [21, 226, 37],\n      loading:    true,\n      status:     null,\n      value:      null,\n      nextPulseCounter: 0\n    }\n  },\n\n  created() {\n    this.getData();\n  },\n\n  computed:{\n    valueColor() {\n      return this.interpolateColor(this.colorFear, this.colorGreed, this.value / 100);\n    }\n  },\n\n  methods: {\n    getData() {\n      this.nextPulseCounter = null;\n      axios.get(URL).then((response) => {\n        let data    = response.data.data[0];\n        //console.log(data);\n        this.loading = false;\n        this.status  = data.value_classification;\n        this.value   = data.value;\n        this.nextPulseCounter = parseInt(data.time_until_update + 100);\n      })\n    },\n\n    interpolateColor(color1, color2, factor) {\n      if (arguments.length < 3) {\n        factor = 0.5;\n      }\n      var result = color1.slice();\n      for (var i = 0; i < 3; i++) {\n        result[i] = Math.round(result[i] + factor * (color2[i] - color1[i]));\n      }\n\n      return `rgb(${result[0]},${result[1]},${result[2]})`;\n    },\n  },\n\n  watch: {\n    nextPulseCounter (newValue) {\n      if(newValue) {\n        setTimeout(() => {\n          this.getData();\n        }, newValue);\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\n  @import url('https://fonts.googleapis.com/css2?family=Roboto:wght@300;400&display=swap');\n\n  :root {\n    --barBorderRadius: 20px;\n    --barColorBackground: red;\n  }\n\n  .Gf_Content {\n    --barBorderRadius: 20px;\n    --barColorBackground: #1f1f1f;\n\n    font-family: 'Roboto', sans-serif;\n    color: #fff;\n    padding: 20px;\n    border-radius: 5px;\n    background-color: #000;\n  }\n\n  .Gf_title {\n    margin: 0 0 10px;\n    font-weight: normal;\n    font-size: 20px;\n  }\n\n  .Gf_bar {\n    display: flex;\n    width: 100%;\n    height: 40px;\n    margin: 0 auto;\n    border-radius: var(--barBorderRadius);\n    background-color: var(--barColorBackground);\n  }\n\n  .Gf_barLine {\n    height: 100%;\n    border-radius: var(--barBorderRadius) 0 0 var(--barBorderRadius);\n  }\n\n  .Gf_labels {\n    display: flex;\n    padding: 15px 5px 0;\n    justify-content: space-between;\n  }\n\n  .Gf_labels div {\n    flex: 0 0 auto;\n  }\n\n  .Gf_value {\n    padding: 0 5px 10px;\n  }\n\n  .Gf_valueBubble {\n    display: inline-block;\n    width: 40px;\n    height: 40px;\n    line-height: 40px;\n    text-align: center;\n    border-radius: 50%;\n    transform: translate(-50%, 0);\n  }\n</style>\n"],"sourceRoot":""}]}